name: Production Build

on:
  push:
    branches: [main]

env:
  GITHUB_REGISTRY: ghcr.io
  DOCKER_REGISTRY: docker.io
  IMAGE_NAME: "coollabsio/jata"

jobs:
  amd64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Login to ${{ env.GITHUB_REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GITHUB_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN  }}

      - name: Login to ${{ env.DOCKER_REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and Push Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/production/Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}:next
            ${{ env.GITHUB_REGISTRY }}/${{ env.IMAGE_NAME }}:next

  aarch64:
    runs-on: [self-hosted, arm64]
    steps:
      - uses: actions/checkout@v4

      - name: Login to ${{ env.GITHUB_REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GITHUB_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN  }}

      - name: Login to ${{ env.DOCKER_REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and Push Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/production/Dockerfile
          platforms: linux/aarch64
          push: true
          tags: |
            ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}:next-aarch64
            ${{ env.GITHUB_REGISTRY }}/${{ env.IMAGE_NAME }}:next-aarch64

  merge-manifest:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [amd64, aarch64]
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - name: Login to ${{ env.GITHUB_REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GITHUB_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN  }}

      - name: Login to ${{ env.DOCKER_REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Create & publish manifest on ${{ env.GITHUB_REGISTRY }}
        run: |
          docker buildx imagetools create \
          --append ${{ env.GITHUB_REGISTRY }}/${{ env.IMAGE_NAME }}:next-aarch64 \
          --tag ${{ env.GITHUB_REGISTRY }}/${{ env.IMAGE_NAME }}:next

      - name: Create & publish manifest on ${{ env.DOCKER_REGISTRY }}
        run: |
          docker buildx imagetools create \
          --append ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}:next-aarch64 \
          --tag ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}:next

      # - uses: sarisia/actions-status-discord@v1
      #   if: always()
      #   with:
      #     webhook: ${{ secrets.DISCORD_WEBHOOK_PROD_RELEASE_CHANNEL  }}
